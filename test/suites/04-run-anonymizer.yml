name: run anonymization methods
testcases:
  - name: swapping
    steps:
      - script: |-
          sigo -q x -s s -a swapping <<EOF
          { "x":4, "y":2, "s":"malade" }
          { "x":9, "y":3, "s":"non malade" }
          { "x":2, "y":1, s":"malade" }
          EOF
        assertions:
          - result.systemoutjson.x ShouldBeIn 4 9 2
          - result.systemoutjson.y ShouldBeIn 2 3 1
          - result.systemoutjson.s ShouldEqual "malade"
          - result.code ShouldEqual 0

  - name: generalization
    steps:
      - script: rm -f output_sigo.json
      - script: rm -f output_jq.json
      - script: rm -f expected.json
      - script: |-
          cat > expected.json <<EOF
          {"fruit":[0,1],"taille":[1,2],"poids":[1,2],"meurtre":0,"natation":[0,1],"course":[0,1],"voltige":[0,1],"animal":"souris"}
          {"fruit":[0,1],"taille":[1,2],"poids":[1,2],"meurtre":0,"natation":[0,1],"course":[0,1],"voltige":[0,1],"animal":"saumon"}
          {"fruit":[0,1],"taille":[1,2],"poids":[1,2],"meurtre":1,"natation":[0,1],"course":[0,1],"voltige":[0,1],"animal":"chouette"}
          {"fruit":[0,1],"taille":[1,2],"poids":[1,2],"meurtre":0,"natation":[0,1],"course":[0,1],"voltige":[0,1],"animal":"canard"}
          {"fruit":[0,1],"taille":[3,3],"poids":[3,4],"meurtre":1,"natation":[0,1],"course":[0,1],"voltige":[0,1],"animal":"loup"}
          {"fruit":[0,1],"taille":[3,3],"poids":[3,4],"meurtre":0,"natation":[0,1],"course":[0,1],"voltige":[0,1],"animal":"singe"}
          {"fruit":[1,1],"taille":[4,5],"poids":[4,5],"meurtre":1,"natation":[1,1],"course":[1,1],"voltige":[0,0],"animal":"ours"}
          {"fruit":[1,1],"taille":[4,5],"poids":[4,5],"meurtre":0,"natation":[1,1],"course":[1,1],"voltige":[0,0],"animal":"elephant"}
          EOF
      - script: |-
          sigo -q taille,poids,fruit,natation,course,voltige -s meurtre -k 2 -l 2 -a general > output_sigo.json <<EOF
          {"fruit":1, "taille": 2, "poids": 2 , "meurtre": 0, "natation":1, "course":1, "voltige":1 , "animal": "canard"}
          {"fruit":1, "taille": 5, "poids": 5 , "meurtre": 0, "natation":1, "course":1, "voltige":0 , "animal": "elephant"}
          {"fruit":1, "taille": 4, "poids": 4 , "meurtre": 1, "natation":1, "course":1, "voltige":0 , "animal": "ours"}
          {"fruit":1, "taille": 1, "poids": 1 , "meurtre": 0, "natation":0, "course":1, "voltige":0, "animal":"souris" }
          {"fruit":0, "taille": 2, "poids": 2 , "meurtre": 0, "natation":1, "course":0, "voltige":0 , "animal": "saumon"}
          {"fruit":0, "taille": 2, "poids": 1 , "meurtre": 1, "natation":0, "course":0, "voltige":1, "animal" : "chouette" }
          {"fruit":1, "taille": 3, "poids": 3 , "meurtre": 0, "natation":1, "course":0, "voltige":1 , "animal": "singe"}
          {"fruit":0, "taille": 3, "poids": 4 , "meurtre": 1, "natation":0, "course":1, "voltige":0 , "animal" : "loup"}
          EOF
        assertions:
          - result.code ShouldEqual 0
      - script: cat output_sigo.json | jq -c "{fruit:.fruit,taille:.taille,poids:.poids,meurtre:.meurtre,natation:.natation,course:.course,voltige:.voltige,animal:.animal}" > output_jq.json
        assertions:
          - result.systemerr ShouldBeEmpty
          - result.code ShouldEqual 0
      - script: diff output_jq.json expected.json
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldBeEmpty

  - name: null value in dataset should return error
    steps:
      - script: rm -f output_sigo.json
      - script: rm -f output_jq.json
      - script: |-
          sigo -q taille,poids,fruit,natation,course,voltige -s meurtre -k 2 -l 2 -a general > output_sigo.json <<EOF
          {"fruit":1, "taille": 2, "poids": 2 , "meurtre": 0, "natation":1, "course":1, "voltige":1 , "animal": "canard"}
          {"fruit":1, "taille": 5, "poids": 5 , "meurtre": 0, "natation":1, "course":1, "voltige":0 , "animal": "elephant"}
          {"fruit":1, "taille": 4, "poids": 4 , "meurtre": 1, "natation":1, "course":1, "voltige":0 , "animal": "ours"}
          {"fruit":1, "taille": 1, "poids": 1 , "meurtre": 0, "natation":0, "course":1, "voltige":0, "animal":"souris" }
          {"fruit":0, "taille": 2, "poids": 2 , "meurtre": 0, "natation":1, "course":0, "voltige":0 , "animal": "saumon"}
          {"fruit":0, "taille": 2, "poids": 1 , "meurtre": 1, "natation":0, "course":0, "voltige":1, "animal" : "chouette" }
          {"fruit":1, "taille": 3, "poids": 3 , "meurtre": 0, "natation":1, "course":0, "voltige":1 , "animal": "singe"}
          {"fruit":0, "taille": 3, "poids": null , "meurtre": 1, "natation":0, "course":1, "voltige":0 , "animal" : "loup"}
          EOF
        assertions:
          - result.systemerr ShouldEqual 1
          - result.systemerr ShouldContainKey null
